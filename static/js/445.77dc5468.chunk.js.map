{"version":3,"file":"static/js/445.77dc5468.chunk.js","mappings":"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","sources":["pages/Media/Components/Button/index.jsx","pages/Media/GenrePage/index.jsx","pages/Media/MediaLIst/Item/index.jsx","pages/Media/MediaLIst/index.jsx"],"sourcesContent":["import \"./index.scss\";\r\n\r\nfunction Buttons({ page, toPage, pages }) {\r\n  const buttons = [];\r\n  for(let i = 1; i < pages; i++) {\r\n    buttons.push(i)\r\n    if(i > 9){\r\n      break\r\n    }\r\n  }\r\n  \r\n\r\n  return (\r\n    <div className=\"buttons\">\r\n      {buttons.map((item) => {\r\n        return (\r\n          <button\r\n            key={item}\r\n            id={item}\r\n            className={\"btn\" + (item === page ? \"current\" : \"\")}\r\n            onClick={() => {\r\n              toPage(item);\r\n            }}\r\n          >\r\n            {item}\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Buttons;\r\n","import { useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\nimport MediaList from \"../MediaLIst\";\r\nimport Buttons from \"../Components/Button\";\r\nimport Loader from \"../../../Components/Loader\";\r\nimport useFetch from \"../../../hooks/useFetch\";\r\nimport useMediaType from \"../../../hooks/useMediaType\";\r\nimport { API_KEY } from \"../../../Url_s\";\r\n\r\nimport \"./index.scss\";\r\n\r\nfunction GenrePage() {\r\n  const params = useParams();\r\n  const { genre, id, page } = params;\r\n  const navigate = useNavigate();\r\n  const movie = useMediaType(\"movie\");\r\n\r\n  const toPage = (page) => {\r\n    navigate(\r\n      movie\r\n        ? `/movies/${genre}/${id}/${page}`\r\n        : `/series/${genre}/${id}/${page}`\r\n    );\r\n  };\r\n\r\n  const url = movie\r\n    ? `/discover/movie?${API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}&with_genres=${id}&with_watch_monetization_types=flatrate`\r\n    : ` /discover/tv?${API_KEY}&language=en-US&sort_by=popularity.desc&page=${page}&timezone=America%2FNew_York&with_genres=${id}&include_null_first_air_dates=false&with_watch_monetization_types=flatrate&with_status=0&with_type=0`;\r\n\r\n  const [data, , , dofetch] = useFetch(url);\r\n\r\n  useEffect(() => {\r\n    dofetch();\r\n  }, [page]);\r\n\r\n  function toUpperCase(str) {\r\n    return str[0].toUpperCase() + str.slice(1);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mediaByGenre\">\r\n        <div className=\"mediaGenre\">\r\n          <h3>{toUpperCase(genre)}</h3>\r\n        </div>\r\n        {data ? (\r\n          <div className=\"movieList\">\r\n            <MediaList data={data} />\r\n            <Buttons\r\n              page={data?.page}\r\n              toPage={toPage}\r\n              pages={data?.total_pages}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <Loader />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GenrePage;\r\n","import { useNavigate } from \"react-router-dom\";\r\nimport useMediaType from \"../../../../hooks/useMediaType\";\r\nimport { imgUrl, noImgUrl } from \"../../../../Url_s\";\r\nimport \"./index.scss\";\r\n\r\n\r\nconst MovieItem = ({ data }) => {\r\n  const navigate = useNavigate()\r\n  const movie = useMediaType('movie')\r\n  \r\n\r\n  return (\r\n    <li className=\"mediaLi\" id={data.id} >\r\n      <div className=\"imgDiv\"\r\n      >\r\n        <img\r\n          className=\"img\"\r\n          width=\"245\"\r\n          height=\"140\"\r\n          src={data?.backdrop_path? imgUrl + data?.backdrop_path: noImgUrl} \r\n          alt={data?.title || data?.name}\r\n          id={data.id}\r\n          onClick={() => {navigate(movie? `/movies/info/${data.id}`: `/series/info/${data.id}`)}}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"hovered\" >\r\n        <div className=\"title\">\r\n          <span>\r\n            <span>{data?.title? data?.title.slice(0,15): data.name.slice(0,15)}</span>\r\n            <span className=\"vote\">{data.vote_average}</span>\r\n          </span>\r\n          <i className=\"bx bx-add-to-queue\"></i>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default MovieItem;\r\n","import MovieItem from \"./Item\";\r\nimport \"./index.scss\";\r\n\r\nfunction Mediist({ data }) {\r\n  return (\r\n      <ul className=\"mediaUl\">\r\n        {data?.results?.map((data) => {\r\n          return <MovieItem data={data} key={data.id} id={data.id} />;\r\n        })}\r\n      </ul>\r\n  );\r\n}\r\n\r\nexport default Mediist;\r\n"],"names":["page","toPage","pages","buttons","i","push","className","map","item","id","onClick","str","params","useParams","genre","navigate","useNavigate","movie","useMediaType","url","API_KEY","useFetch","data","dofetch","useEffect","toUpperCase","slice","Button","total_pages","Loader","width","height","src","backdrop_path","imgUrl","noImgUrl","alt","title","name","vote_average","results"],"sourceRoot":""}