{"version":3,"file":"static/js/554.7c97c9d0.chunk.js","mappings":"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","sources":["Components/Loader/index.jsx","Url_s.js","pages/Media/Components/Button/index.jsx","pages/Media/MediaLIst/Item/index.jsx","pages/Media/MediaLIst/index.jsx","pages/Media/Components/GenreList/index.jsx","pages/Media/index.jsx"],"sourcesContent":["import './index.scss'\r\n\r\nfunction Loader() {\r\n  return (\r\n    <div className='loaderContainer' >\r\n      <span className='loader'>Loading</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader","export const BASE_URL = \"https://api.themoviedb.org/3\";\r\nexport const API_KEY = \"api_key=210df5155329bef70be1615bd2091852&language=en-US\";\r\n\r\nexport const popularUrl = BASE_URL + \"/movie/popular?\" + API_KEY + \"&language=en-US&page=1\";\r\nexport const nowPlayingUrl = BASE_URL + \"/movie/now_playing?\" + API_KEY + \"&language=en-US&page=1\";\r\n\r\nexport const discoverUrl =\r\n    BASE_URL + \"/discover/movie?\" + API_KEY +\r\n    \"&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&year=&with_genres=37&with_watch_monetization_types=flatrate\";\r\n\r\nexport const movieGenresUrl = \"https://api.themoviedb.org/3/genre/movie/list?api_key=210df5155329bef70be1615bd2091852&language=en-US\";\r\nexport const tvGenresUrl = \" https://api.themoviedb.org/3/genre/tv/list?api_key=210df5155329bef70be1615bd2091852&language=en-US\";\r\n\r\n\r\nexport const imgUrl = \"https://image.tmdb.org/t/p/original\";\r\nexport const noImgUrl = \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSJLICBu_i2rNNd8l9Zz-DUNSwFXR9xAzCutg&usqp=CAU\"\r\nexport const youtubeUrl = \"https://www.youtube.com/embed/\";\r\n\r\n\r\n","import \"./index.scss\";\r\n\r\nfunction Buttons({ page, toPage, pages }) {\r\n  pages?console.log(pages, 7456): console.log(789545)\r\n\r\n  const buttons = [];\r\n  for(let i = 1; i < pages; i++) {\r\n    buttons.push(i)\r\n    if(i > 9){\r\n      break\r\n    }\r\n  }\r\n  \r\n  \r\n  console.log(buttons, 745645);\r\n\r\n  return (\r\n    <div className=\"buttons\">\r\n      {buttons.map((item) => {\r\n        return (\r\n          <button\r\n            key={item}\r\n            id={item}\r\n            className={\"btn\" + (item === page ? \"current\" : \"\")}\r\n            onClick={() => {\r\n              toPage(item);\r\n            }}\r\n          >\r\n            {item}\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Buttons;\r\n","import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport useMediaType from \"../../../../hooks/useMediaType\";\r\nimport { imgUrl, noImgUrl } from \"../../../../Url_s\";\r\nimport \"./index.scss\";\r\n\r\n\r\nconst MovieItem = ({ data }) => {\r\n  const navigate = useNavigate()\r\n  const movie = useMediaType('movie')\r\n  \r\n\r\n  return (\r\n    <li className=\"mediaLi\" id={data.id} >\r\n      <div className=\"imgDiv\"\r\n      >\r\n        <img\r\n          className=\"img\"\r\n          width=\"245\"\r\n          height=\"140\"\r\n          src={data?.backdrop_path? imgUrl + data?.backdrop_path: noImgUrl} \r\n          alt={data?.title || data?.name}\r\n          id={data.id}\r\n          onClick={() => {navigate(movie? `/movies/info/${data.id}`: `/series/info/${data.id}`)}}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"hovered\" >\r\n        <div className=\"title\">\r\n          <span>\r\n            <span>{data?.title? data?.title.slice(0,15): data.name.slice(0,15)}</span>\r\n            <span className=\"vote\">{data.vote_average}</span>\r\n          </span>\r\n          <i className=\"bx bx-add-to-queue\"></i>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default MovieItem;\r\n","import MovieItem from \"./Item\";\r\nimport \"./index.scss\";\r\n\r\nfunction Mediist({ data }) {\r\n  return (\r\n      <ul className=\"mediaUl\">\r\n        {data?.results?.map((data) => {\r\n          return <MovieItem data={data} key={data.id} id={data.id} />;\r\n        })}\r\n      </ul>\r\n  );\r\n}\r\n\r\nexport default Mediist;\r\n","import { useState } from \"react\";\r\nimport \"./index.scss\";\r\n\r\nfunction GenreList({ data, onChange,  mediaType }) {\r\n  const [show, setShow] = useState(false)\r\n  const onShow = () => {\r\n    setShow(prev => !prev)\r\n  }\r\n\r\n  return (\r\n    <div className=\"select\">\r\n      <h3>{mediaType ? \"Movies\" : \"Series\"}</h3>\r\n      {/* <select className=\"selsectBox\" onChange={(e) => onChange(e)}>\r\n        <option>Genre</option>\r\n        {data\r\n          ? data.genres.map((data) => {\r\n              return (\r\n                <option key={data.id} value={data.id} title={data.name} className=\"option\">\r\n                  {data.name}\r\n                </option>\r\n              );\r\n            })\r\n          : null}\r\n      </select> */}\r\n      <div>\r\n        <div className=\"genreContainer\" onClick={onShow}>\r\n          <span>Genre</span>\r\n          <i className=\"bx bx-chevron-down\"></i>\r\n        </div>\r\n        {show? <div className=\"listContainer\">\r\n          {data\r\n            ? data.genres.map((data) => {\r\n                return (\r\n                  <div\r\n                    className=\"list\"\r\n                    key={data.id}\r\n                    id={data?.id}\r\n                    title={data?.name}\r\n                    onClick={(e) => {\r\n                      onChange(e);\r\n                    }}\r\n                  >\r\n                    {data?.name}\r\n                  </div>\r\n                );\r\n              })\r\n            : null}\r\n        </div>: null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GenreList;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nimport GenreList from \"./Components/GenreList\";\r\nimport MediaList from \"./MediaLIst\";\r\nimport Buttons from \"./Components/Button\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport { movieGenresUrl, tvGenresUrl, BASE_URL, API_KEY } from \"../../Url_s\";\r\n\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport useMediaType from \"../../hooks/useMediaType\";\r\n\r\nimport \"./index.scss\";\r\n\r\nfunction Media() {\r\n  const [genreId, setGenreId] = useState(\"\");\r\n  const { pageId } = useParams();\r\n  const movie = useMediaType(\"movie\");\r\n  const navigate = useNavigate();\r\n\r\n  const url = movie\r\n    ? BASE_URL +\r\n      `/discover/movie?${API_KEY}&sort_by=popularity.desc&include_adult=false&include_video=false&page=${pageId}&with_genres=${genreId}&with_watch_monetization_types=flatrate`\r\n    : BASE_URL +\r\n      `/discover/tv?${API_KEY}&sort_by=popularity.desc&page=${pageId}&timezone=America%2FNew_York&with_genres=${genreId}&include_null_first_air_dates=false&with_watch_monetization_types=flatrate&with_status=0&with_type=0`;\r\n\r\n  const genreUrl = movie ? movieGenresUrl : tvGenresUrl;\r\n\r\n  const [data, error, loading, dofetch] = useFetch(url);\r\n  const [genreData, , , fetchGenre] = useFetch(genreUrl);\r\n\r\n  useEffect(() => {\r\n    dofetch();\r\n    fetchGenre();\r\n  }, [pageId]);\r\n\r\n  function toLowerCase(str) {\r\n    return str[0].toLowerCase() + str.slice(1);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setGenreId(e.target.value);\r\n    navigate(\r\n      movie\r\n        ? `/movies/${toLowerCase(e.target.title)}/${e.target?.id}/1`\r\n        : `/series/${toLowerCase(e.target.title)}/${e.target?.id}/1`\r\n    );\r\n  };\r\n\r\n  const toPage = (page) => {\r\n    navigate(movie ? `/movies/${page}` : `/series/${page}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {data ? (\r\n        <div className=\"movie\">\r\n          <div className=\"genreSelect\">\r\n            <GenreList onChange={onChange} data={genreData} mediaType={movie} />\r\n          </div>\r\n          {loading || (\r\n            <div className=\"movieList\">\r\n              <MediaList data={data} />\r\n              <Buttons\r\n                page={data?.page}\r\n                toPage={toPage}\r\n                pages={data?.total_pages}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Media;\r\n"],"names":["className","BASE_URL","API_KEY","popularUrl","nowPlayingUrl","discoverUrl","movieGenresUrl","tvGenresUrl","imgUrl","noImgUrl","youtubeUrl","page","toPage","pages","console","log","buttons","i","push","map","item","id","onClick","data","navigate","useNavigate","movie","useMediaType","width","height","src","backdrop_path","alt","title","name","slice","vote_average","results","onChange","mediaType","useState","show","setShow","prev","genres","e","genreId","setGenreId","pageId","useParams","url","genreUrl","useFetch","loading","dofetch","genreData","fetchGenre","toLowerCase","str","useEffect","target","value","Button","total_pages","Loader"],"sourceRoot":""}