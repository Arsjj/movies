{"version":3,"file":"static/js/445.3fa71c3f.chunk.js","mappings":"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","sources":["Components/Loader/index.jsx","hooks/useMediaType/index.js","pages/Media/Components/Button/index.jsx","pages/Media/GenrePage/index.jsx","pages/Media/MediaLIst/Item/index.jsx","pages/Media/MediaLIst/index.jsx"],"sourcesContent":["import './index.scss'\r\n\r\nfunction Loader() {\r\n  return (\r\n    <div className='loaderContainer' >\r\n      <span className='loader'>Loading</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader","import { useLocation } from \"react-router-dom\"\r\n\r\nfunction useMediaType(arg) {\r\n    return useLocation().pathname.includes(arg)\r\n}\r\n\r\nexport default useMediaType","import \"./index.scss\";\r\n\r\nfunction Buttons({ page, toPage, pages }) {\r\n  pages?console.log(pages, 7456): console.log(789545)\r\n\r\n  const buttons = [];\r\n  for(let i = 1; i < pages; i++) {\r\n    buttons.push(i)\r\n    if(i > 9){\r\n      break\r\n    }\r\n  }\r\n  \r\n  \r\n  console.log(buttons, 745645);\r\n\r\n  return (\r\n    <div className=\"buttons\">\r\n      {buttons.map((item) => {\r\n        return (\r\n          <button\r\n            key={item}\r\n            id={item}\r\n            className={\"btn\" + (item === page ? \"current\" : \"\")}\r\n            onClick={() => {\r\n              toPage(item);\r\n            }}\r\n          >\r\n            {item}\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Buttons;\r\n","import { useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport useFetch from \"../../../hooks/useFetch\";\r\nimport MediaList from \"../MediaLIst\";\r\nimport Buttons from \"../Components/Button\";\r\nimport useMediaType from \"../../../hooks/useMediaType\";\r\nimport Loader from \"../../../Components/Loader\";\r\nimport \"./index.scss\";\r\n\r\nfunction GenrePage() {\r\n  const params = useParams();\r\n  const { genre, id, page } = params;\r\n  const navigate = useNavigate();\r\n  const movie = useMediaType(\"movie\");\r\n  \r\n  const toPage = (page) => {\r\n    navigate(movie? `/movies/${genre}/${id}/${page}`: `/series/${genre}/${id}/${page}`);\r\n  };\r\n\r\n  const url = movie\r\n    ? `https://api.themoviedb.org/3/discover/movie?api_key=210df5155329bef70be1615bd2091852&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}&with_genres=${id}&with_watch_monetization_types=flatrate`\r\n    : ` https://api.themoviedb.org/3/discover/tv?api_key=210df5155329bef70be1615bd2091852&language=en-US&sort_by=popularity.desc&page=${page}&timezone=America%2FNew_York&with_genres=${id}&include_null_first_air_dates=false&with_watch_monetization_types=flatrate&with_status=0&with_type=0`;\r\n    \r\n    const [data,  , , dofetch] = useFetch(url);\r\n    console.log(data, 478)\r\n\r\n  useEffect(() => {\r\n    dofetch();\r\n  }, [page]);\r\n\r\n  function toUpperCase(str){\r\n    return str[0].toUpperCase() + str.slice(1)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"movie\">\r\n        <div className=\"genre\">\r\n          <h3>{toUpperCase(genre)}</h3>\r\n        </div>\r\n        {data?<div className=\"movieList\">\r\n          <MediaList data={data} />\r\n          <Buttons page={data?.page} toPage={toPage} pages={data?.total_pages}/>\r\n        </div>: <Loader />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GenrePage;\r\n","import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport useMediaType from \"../../../../hooks/useMediaType\";\r\nimport \"./index.scss\";\r\n\r\nconst imgUrl = \"https://image.tmdb.org/t/p/w500\";\r\n\r\nconst MovieItem = ({ data }) => {\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  const navigate = useNavigate()\r\n  const movie = useMediaType('movie')\r\n  \r\n\r\n  return (\r\n    <li className=\"li\" id={data.id} >\r\n      <div\r\n        onMouseEnter={() => setIsHovered(true)}\r\n        onMouseLeave={() => setIsHovered(false)}\r\n      >\r\n        <img\r\n          className=\"img\"\r\n          width=\"245\"\r\n          height=\"140\"\r\n          src={imgUrl + data?.backdrop_path} \r\n          alt={data?.title || data?.name}\r\n          id={data.id}\r\n          onClick={() => {navigate(movie? `/movies/info/${data.id}`: `/series/info/${data.id}`)}}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"hovered\" >\r\n        <div className=\"title\">\r\n          <span>\r\n            <span>{data?.title? data?.title.slice(0,15): data.name.slice(0,15)}</span>\r\n            <span className=\"vote\">{data.vote_average}</span>\r\n          </span>\r\n          <i className=\"bx bx-add-to-queue\"></i>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default MovieItem;\r\n","import MovieItem from \"./Item\";\r\nimport \"./index.scss\";\r\n\r\nfunction Mediist({ data }) {\r\n  return (\r\n    <div>\r\n      <ul className=\"ul\">\r\n        {data?.results?.map((data) => {\r\n          return <MovieItem data={data} key={data.id} id={data.id} />;\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Mediist;\r\n"],"names":["className","arg","useLocation","pathname","includes","page","toPage","pages","console","log","buttons","i","push","map","item","id","onClick","str","params","useParams","genre","navigate","useNavigate","movie","useMediaType","url","useFetch","data","dofetch","useEffect","toUpperCase","slice","Button","total_pages","Loader","useState","setIsHovered","onMouseEnter","onMouseLeave","width","height","src","backdrop_path","alt","title","name","vote_average","results"],"sourceRoot":""}