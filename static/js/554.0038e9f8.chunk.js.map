{"version":3,"file":"static/js/554.0038e9f8.chunk.js","mappings":"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","sources":["pages/Media/Components/Button/index.jsx","pages/Media/MediaLIst/Item/index.jsx","pages/Media/MediaLIst/index.jsx","pages/Media/Components/GenreList/index.jsx","pages/Media/index.jsx"],"sourcesContent":["import \"./index.scss\";\r\n\r\nfunction Buttons({ page, toPage, pages }) {\r\n  const buttons = [];\r\n  for(let i = 1; i < pages; i++) {\r\n    buttons.push(i)\r\n    if(i > 9){\r\n      break\r\n    }\r\n  }\r\n  \r\n\r\n  return (\r\n    <div className=\"buttons\">\r\n      {buttons.map((item) => {\r\n        return (\r\n          <button\r\n            key={item}\r\n            id={item}\r\n            className={\"btn\" + (item === page ? \"current\" : \"\")}\r\n            onClick={() => {\r\n              toPage(item);\r\n            }}\r\n          >\r\n            {item}\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Buttons;\r\n","import { useNavigate } from \"react-router-dom\";\r\nimport useMediaType from \"../../../../hooks/useMediaType\";\r\nimport { imgUrl, noImgUrl } from \"../../../../Url_s\";\r\nimport \"./index.scss\";\r\n\r\n\r\nconst MovieItem = ({ data }) => {\r\n  const navigate = useNavigate()\r\n  const movie = useMediaType('movie')\r\n  \r\n\r\n  return (\r\n    <li className=\"mediaLi\" id={data.id} >\r\n      <div className=\"imgDiv\"\r\n      >\r\n        <img\r\n          className=\"img\"\r\n          width=\"245\"\r\n          height=\"140\"\r\n          src={data?.backdrop_path? imgUrl + data?.backdrop_path: noImgUrl} \r\n          alt={data?.title || data?.name}\r\n          id={data.id}\r\n          onClick={() => {navigate(movie? `/movies/info/${data.id}`: `/series/info/${data.id}`)}}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"hovered\" >\r\n        <div className=\"title\">\r\n          <span>\r\n            <span>{data?.title? data?.title.slice(0,15): data.name.slice(0,15)}</span>\r\n            <span className=\"vote\">{data.vote_average}</span>\r\n          </span>\r\n          <i className=\"bx bx-add-to-queue\"></i>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default MovieItem;\r\n","import MovieItem from \"./Item\";\r\nimport \"./index.scss\";\r\n\r\nfunction Mediist({ data }) {\r\n  return (\r\n      <ul className=\"mediaUl\">\r\n        {data?.results?.map((data) => {\r\n          return <MovieItem data={data} key={data.id} id={data.id} />;\r\n        })}\r\n      </ul>\r\n  );\r\n}\r\n\r\nexport default Mediist;\r\n","import { useState } from \"react\";\r\nimport \"./index.scss\";\r\n\r\nfunction GenreList({ data, onChange, mediaType }) {\r\n  const [show, setShow] = useState(false);\r\n  const onShow = () => {\r\n    setShow((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <div className=\"select\">\r\n      <h3>{mediaType ? \"Movies\" : \"Series\"}</h3>\r\n      <div>\r\n        <div className=\"genreContainer\" onClick={onShow}>\r\n          <span>Genre</span>\r\n          <i className=\"bx bx-chevron-down\"></i>\r\n        </div>\r\n        {show ? (\r\n          <div className=\"listContainer\">\r\n            {data\r\n              ? data.genres.map((data) => {\r\n                  return (\r\n                    <div\r\n                      className=\"list\"\r\n                      key={data.id}\r\n                      id={data?.id}\r\n                      title={data?.name}\r\n                      onClick={(e) => {\r\n                        onChange(e);\r\n                      }}\r\n                    >\r\n                      {data?.name}\r\n                    </div>\r\n                  );\r\n                })\r\n              : null}\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GenreList;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nimport GenreList from \"./Components/GenreList\";\r\nimport MediaList from \"./MediaLIst\";\r\nimport Buttons from \"./Components/Button\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport { movieGenresUrl, tvGenresUrl, API_KEY } from \"../../Url_s\";\r\n\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport useMediaType from \"../../hooks/useMediaType\";\r\n\r\nimport \"./index.scss\";\r\n\r\nfunction Media() {\r\n  const [genreId, setGenreId] = useState(\"\");\r\n  const { pageId } = useParams();\r\n  const movie = useMediaType(\"movie\");\r\n  const navigate = useNavigate();\r\n\r\n  const url = movie\r\n    ? `/discover/movie?${API_KEY}&sort_by=popularity.desc&include_adult=false&include_video=false&page=${pageId}&with_genres=${genreId}&with_watch_monetization_types=flatrate`\r\n    : `/discover/tv?${API_KEY}&sort_by=popularity.desc&page=${pageId}&timezone=America%2FNew_York&with_genres=${genreId}&include_null_first_air_dates=false&with_watch_monetization_types=flatrate&with_status=0&with_type=0`;\r\n\r\n  const genreUrl = movie ? movieGenresUrl : tvGenresUrl;\r\n\r\n  const [data, , loading, dofetch] = useFetch(url);\r\n  const [genreData, , , fetchGenre] = useFetch(genreUrl);\r\n\r\n  useEffect(() => {\r\n    dofetch();\r\n    fetchGenre();\r\n  }, [pageId]);\r\n  \r\n\r\n  function toLowerCase(str) {\r\n    return str[0].toLowerCase() + str.slice(1);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setGenreId(e.target.value);\r\n    navigate(\r\n      movie\r\n        ? `/movies/${toLowerCase(e.target.title)}/${e.target?.id}/1`\r\n        : `/series/${toLowerCase(e.target.title)}/${e.target?.id}/1`\r\n    );\r\n  };\r\n\r\n  const toPage = (page) => {\r\n    navigate(movie ? `/movies/${page}` : `/series/${page}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {data ? (\r\n        <div className=\"movie\">\r\n          <div className=\"genreSelect\">\r\n            <GenreList onChange={onChange} data={genreData} mediaType={movie} />\r\n          </div>\r\n          {loading || (\r\n            <div className=\"movieList\">\r\n              <MediaList data={data} />\r\n              <Buttons\r\n                page={data?.page}\r\n                toPage={toPage}\r\n                pages={data?.total_pages}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Media;\r\n"],"names":["page","toPage","pages","buttons","i","push","className","map","item","id","onClick","data","navigate","useNavigate","movie","useMediaType","width","height","src","backdrop_path","imgUrl","noImgUrl","alt","title","name","slice","vote_average","results","onChange","mediaType","useState","show","setShow","prev","genres","e","genreId","setGenreId","pageId","useParams","url","API_KEY","genreUrl","movieGenresUrl","tvGenresUrl","useFetch","loading","dofetch","genreData","fetchGenre","toLowerCase","str","useEffect","target","value","Button","total_pages","Loader"],"sourceRoot":""}