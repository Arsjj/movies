{"version":3,"file":"static/js/822.f9f68b70.chunk.js","mappings":"+VAAO,IAAMA,EAAW,+BACXC,EAAU,2CAEVC,EAAaF,EAAW,kBAAoBC,EAAU,yBACtDE,EAAgBH,EAAW,sBAAwBC,EAAU,yBAE7DG,EACTJ,EAAW,mBAAqBC,EAChC,qJAESI,EAAiB,wGACjBC,EAAc,sGAGdC,EAAS,sCACTC,EAAW,sGACXC,EAAa,kC,2HC2D1B,MArEA,WACE,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GAEFE,GAAWC,EAAAA,EAAAA,MACjB,GAAgCC,EAAAA,EAAAA,GAAS,2GAAD,OACqEJ,EADrE,gCAAxC,eAAOK,EAAP,KAAqBC,EAArB,KAUA,OANAC,EAAAA,EAAAA,YAAU,WACRD,MACC,CAACN,IAEJQ,QAAQC,IAAIJ,EAAU,iBAGpB,iBAAKK,UAAU,UAAf,WACE,wBAAa,OAARL,QAAQ,IAARA,GAAAA,EAAUM,QAAQC,OAAS,iBAAmB,gBACnD,gBAAKF,UAAU,aAAf,gBACGL,QADH,IACGA,OADH,EACGA,EAAUM,QAAQE,KAAI,SAACC,GACtB,OACE,iBACEJ,UAAU,iBAEVK,QAAS,WACPb,EACwB,UAAtBY,EAAOE,WAAP,uBACoBF,EAAOd,IACA,QAAjB,OAANc,QAAM,IAANA,OAAA,EAAAA,EAAQE,YAAR,uBACgBF,EAAOd,IADvB,kBAEWc,EAAOd,MAT5B,WAaE,gBAAKU,UAAU,SAAf,UACE,gBACEO,OAAO,QACPC,MAAM,QACNC,IACEL,EAAOM,eACPN,EAAOO,cACPP,EAAOQ,YACHzB,EAAAA,IACuB,WAAtBiB,EAAOE,WAAP,OACGF,QADH,IACGA,OADH,EACGA,EAAQO,aACRP,EAAOM,eAAiBN,EAAOQ,aACnCxB,EAAAA,GAENyB,IAAG,OAAET,QAAF,IAAEA,OAAF,EAAEA,EAAQU,UAIjB,+BACE,iBAAKd,UAAU,UAAf,WACE,2BAAa,OAANI,QAAM,IAANA,OAAA,EAAAA,EAAQW,SAAR,OAAiBX,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAQU,QAAa,KAC7C,iBAAMd,UAAU,YAAhB,UACS,OAANI,QAAM,IAANA,OAAA,EAAAA,EAAQE,WAAW,GAAGU,gBAAtB,OACCZ,QADD,IACCA,OADD,EACCA,EAAQE,WAAWW,MAAM,aAlC5Bb,EAAOd","sources":["Url_s.js","pages/Search/index.jsx"],"sourcesContent":["export const BASE_URL = \"https://api.themoviedb.org/3\";\r\nexport const API_KEY = \"api_key=210df5155329bef70be1615bd2091852\";\r\n\r\nexport const popularUrl = BASE_URL + \"/movie/popular?\" + API_KEY + \"&language=en-US&page=1\";\r\nexport const nowPlayingUrl = BASE_URL + \"/movie/now_playing?\" + API_KEY + \"&language=en-US&page=1\";\r\n\r\nexport const discoverUrl =\r\n    BASE_URL + \"/discover/movie?\" + API_KEY +\r\n    \"&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&year=&with_genres=37&with_watch_monetization_types=flatrate\";\r\n\r\nexport const movieGenresUrl = \"https://api.themoviedb.org/3/genre/movie/list?api_key=210df5155329bef70be1615bd2091852&language=en-US\";\r\nexport const tvGenresUrl = \" https://api.themoviedb.org/3/genre/tv/list?api_key=210df5155329bef70be1615bd2091852&language=en-US\";\r\n\r\n\r\nexport const imgUrl = \"https://image.tmdb.org/t/p/original\";\r\nexport const noImgUrl = \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSJLICBu_i2rNNd8l9Zz-DUNSwFXR9xAzCutg&usqp=CAU\"\r\nexport const youtubeUrl = \"https://www.youtube.com/embed/\";\r\n\r\n\r\n","import { useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport { imgUrl, noImgUrl } from \"../../Url_s\";\r\nimport \"./index.scss\";\r\n\r\nfunction Search() {\r\n  const { id } = useParams();\r\n\r\n  const navigate = useNavigate();\r\n  const [response, , , dofetch] = useFetch(\r\n    `https://api.themoviedb.org/3/search/multi?api_key=210df5155329bef70be1615bd2091852&language=en-US&query=${id}&page=1&include_adult=false`\r\n  );\r\n\r\n  useEffect(() => {\r\n    dofetch();\r\n  }, [id]);\r\n\r\n  console.log(response, 46416974864864);\r\n\r\n  return (\r\n    <div className=\"results\">\r\n      <h3>{response?.results.length ? \"Search results\" : \"No results\"}</h3>\r\n      <div className=\"mediaBlock\">\r\n        {response?.results.map((result) => {\r\n          return (\r\n            <div\r\n              className=\"mediaContainer\"\r\n              key={result.id}\r\n              onClick={() => {\r\n                navigate(\r\n                  result.media_type === \"movie\"\r\n                    ? `/movies/info/${result.id}`\r\n                    : result?.media_type === \"tv\"\r\n                    ? `/series/info/${result.id}`\r\n                    : `/person/${result.id}`\r\n                );\r\n              }}\r\n            >\r\n              <div className=\"imgDiv\">\r\n                <img\r\n                  height=\"150px\"\r\n                  width=\"250px\"\r\n                  src={\r\n                    result.backdrop_path ||\r\n                    result.profile_path ||\r\n                    result.poster_path\r\n                      ? imgUrl +\r\n                        (result.media_type === \"person\"\r\n                          ? result?.profile_path\r\n                          : result.backdrop_path || result.poster_path)\r\n                      : noImgUrl\r\n                  }\r\n                  alt={result?.name}\r\n                />\r\n              </div>\r\n\r\n              <>\r\n                <div className=\"infoDiv\">\r\n                  <span>{result?.title || result?.name}</span>{\" \"}\r\n                  <span className=\"mediaType\">\r\n                    {result?.media_type[0].toUpperCase() +\r\n                      result?.media_type.slice(1)}\r\n                  </span>\r\n                </div>\r\n                {/* <p>{result?.vote_average}</p> */}\r\n              </>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n"],"names":["BASE_URL","API_KEY","popularUrl","nowPlayingUrl","discoverUrl","movieGenresUrl","tvGenresUrl","imgUrl","noImgUrl","youtubeUrl","id","useParams","navigate","useNavigate","useFetch","response","dofetch","useEffect","console","log","className","results","length","map","result","onClick","media_type","height","width","src","backdrop_path","profile_path","poster_path","alt","name","title","toUpperCase","slice"],"sourceRoot":""}