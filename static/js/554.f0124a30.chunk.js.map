{"version":3,"file":"static/js/554.f0124a30.chunk.js","mappings":"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","sources":["Components/Loader/index.jsx","hooks/useMediaType/index.js","pages/Media/Components/Button/index.jsx","pages/Media/MediaLIst/Item/index.jsx","pages/Media/MediaLIst/index.jsx","pages/Media/Components/GenreList/index.jsx","pages/Media/index.jsx"],"sourcesContent":["import './index.scss'\r\n\r\nfunction Loader() {\r\n  return (\r\n    <div className='loaderContainer' >\r\n      <span className='loader'>Loading</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader","import { useLocation } from \"react-router-dom\"\r\n\r\nfunction useMediaType(arg) {\r\n    return useLocation().pathname.includes(arg)\r\n}\r\n\r\nexport default useMediaType","import \"./index.scss\";\r\n\r\nfunction Buttons({ page, toPage, pages }) {\r\n  pages?console.log(pages, 7456): console.log(789545)\r\n\r\n  const buttons = [];\r\n  for(let i = 1; i < pages; i++) {\r\n    buttons.push(i)\r\n    if(i > 9){\r\n      break\r\n    }\r\n  }\r\n  \r\n  \r\n  console.log(buttons, 745645);\r\n\r\n  return (\r\n    <div className=\"buttons\">\r\n      {buttons.map((item) => {\r\n        return (\r\n          <button\r\n            key={item}\r\n            id={item}\r\n            className={\"btn\" + (item === page ? \"current\" : \"\")}\r\n            onClick={() => {\r\n              toPage(item);\r\n            }}\r\n          >\r\n            {item}\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Buttons;\r\n","import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport useMediaType from \"../../../../hooks/useMediaType\";\r\nimport \"./index.scss\";\r\n\r\nconst imgUrl = \"https://image.tmdb.org/t/p/w500\";\r\n\r\nconst MovieItem = ({ data }) => {\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  const navigate = useNavigate()\r\n  const movie = useMediaType('movie')\r\n  \r\n\r\n  return (\r\n    <li className=\"li\" id={data.id} >\r\n      <div\r\n        // onMouseEnter={() => setIsHovered(true)}\r\n        // onMouseLeave={() => setIsHovered(false)}\r\n      >\r\n        <img\r\n          className=\"img\"\r\n          width=\"245\"\r\n          height=\"140\"\r\n          src={imgUrl + data?.backdrop_path} \r\n          alt={data?.title || data?.name}\r\n          id={data.id}\r\n          onClick={() => {navigate(movie? `/movies/info/${data.id}`: `/series/info/${data.id}`)}}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"hovered\" >\r\n        <div className=\"title\">\r\n          <span>\r\n            <span>{data?.title? data?.title.slice(0,15): data.name.slice(0,15)}</span>\r\n            <span className=\"vote\">{data.vote_average}</span>\r\n          </span>\r\n          <i className=\"bx bx-add-to-queue\"></i>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default MovieItem;\r\n","import MovieItem from \"./Item\";\r\nimport \"./index.scss\";\r\n\r\nfunction Mediist({ data }) {\r\n  return (\r\n      <ul className=\"ul\">\r\n        {data?.results?.map((data) => {\r\n          return <MovieItem data={data} key={data.id} id={data.id} />;\r\n        })}\r\n      </ul>\r\n  );\r\n}\r\n\r\nexport default Mediist;\r\n","import { useState } from \"react\";\r\nimport \"./index.scss\";\r\n\r\nfunction GenreList({ data, onChange,  mediaType }) {\r\n  const [show, setShow] = useState(false)\r\n  const onShow = () => {\r\n    setShow(prev => !prev)\r\n  }\r\n\r\n  return (\r\n    <div className=\"select\">\r\n      <h3>{mediaType ? \"Movies\" : \"Series\"}</h3>\r\n      {/* <select className=\"selsectBox\" onChange={(e) => onChange(e)}>\r\n        <option>Genre</option>\r\n        {data\r\n          ? data.genres.map((data) => {\r\n              return (\r\n                <option key={data.id} value={data.id} title={data.name} className=\"option\">\r\n                  {data.name}\r\n                </option>\r\n              );\r\n            })\r\n          : null}\r\n      </select> */}\r\n      <div>\r\n        <div className=\"ge\" onClick={onShow}>\r\n          <span>Genre</span>\r\n          <i className=\"bx bx-chevron-down\"></i>\r\n        </div>\r\n        {show? <div className=\"list\">\r\n          {data\r\n            ? data.genres.map((data) => {\r\n                return (\r\n                  <div\r\n                    className=\"hov\"\r\n                    key={data.id}\r\n                    id={data?.id}\r\n                    title={data?.name}\r\n                    onClick={(e) => {\r\n                      onChange(e);\r\n                    }}\r\n                  >\r\n                    {data?.name}\r\n                  </div>\r\n                );\r\n              })\r\n            : null}\r\n        </div>: null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GenreList;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nimport GenreList from \"./Components/GenreList\";\r\n\r\nimport MediaList from \"./MediaLIst\";\r\nimport Buttons from \"./Components/Button\";\r\nimport Loader from \"../../Components/Loader\";\r\n\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport useMediaType from \"../../hooks/useMediaType\";\r\n\r\nimport \"./index.scss\";\r\n\r\nfunction Media() {\r\n  const [genre, setGenre] = useState();\r\n  const [genreId, setGenreId] = useState(\"\");\r\n\r\n  const { pageId } = useParams();\r\n\r\n  const navigate = useNavigate();\r\n  const movie = useMediaType(\"movie\");\r\n\r\n  const url = movie\r\n    ? `https://api.themoviedb.org/3/discover/movie?api_key=210df5155329bef70be1615bd2091852&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${pageId}&with_genres=${genreId}&with_watch_monetization_types=flatrate`\r\n    : `\r\n  https://api.themoviedb.org/3/discover/tv?api_key=210df5155329bef70be1615bd2091852&language=en-US&sort_by=popularity.desc&page=${pageId}&timezone=America%2FNew_York&with_genres=${genreId}&include_null_first_air_dates=false&with_watch_monetization_types=flatrate&with_status=0&with_type=0`;\r\n\r\n  const genreUrl = movie\r\n    ? \"https://api.themoviedb.org/3/genre/movie/list?api_key=210df5155329bef70be1615bd2091852&language=en-US\"\r\n    : \" https://api.themoviedb.org/3/genre/tv/list?api_key=210df5155329bef70be1615bd2091852&language=en-US\";\r\n\r\n  const [data, error, loading, dofetch] = useFetch(url);\r\n\r\n  useEffect(() => {\r\n    fetch(genreUrl)\r\n      .then((res) => res.json())\r\n      .then((res) => setGenre(res));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dofetch();\r\n  }, [pageId]);\r\n\r\n  function toLowerCase(str) {\r\n    return str[0].toLowerCase() + str.slice(1);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setGenreId(e.target.value);\r\n\r\n    navigate(\r\n      movie\r\n        ? `/movies/${toLowerCase(e.target.title)}/${e.target?.id}/1`\r\n        : `/series/${toLowerCase(e.target.title)}/${e.target?.id}/1`\r\n    );\r\n  };\r\n\r\n  const toPage = (page) => {\r\n    navigate(movie ? `/movies/${page}` : `/series/${page}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {data ? (\r\n        <div className=\"movie\">\r\n          <div className=\"genreSelect\">\r\n            <GenreList onChange={onChange} data={genre} mediaType={movie} />\r\n          </div>\r\n          {loading || (\r\n            <div className=\"movieList\">\r\n              <MediaList data={data} />\r\n              <Buttons\r\n                page={data?.page}\r\n                toPage={toPage}\r\n                pages={data?.total_pages}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Media;\r\n"],"names":["className","arg","useLocation","pathname","includes","page","toPage","pages","console","log","buttons","i","push","map","item","id","onClick","data","useState","navigate","useNavigate","movie","useMediaType","width","height","src","backdrop_path","alt","title","name","slice","vote_average","results","onChange","mediaType","show","setShow","prev","genres","e","genre","setGenre","genreId","setGenreId","pageId","useParams","url","genreUrl","useFetch","loading","dofetch","toLowerCase","str","useEffect","fetch","then","res","json","target","value","Button","total_pages","Loader"],"sourceRoot":""}