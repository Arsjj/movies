{"version":3,"file":"static/js/230.98efb5ad.chunk.js","mappings":"iPAOMA,EAAU,CACd,eAAgB,oBAmHlB,MAhHA,WACE,OAA4BC,EAAAA,EAAAA,UAAS,CACnCC,SAAU,SACVC,SAAU,YAFZ,eAAOC,EAAP,KAAeC,EAAf,KAKMC,EAAkB,SAACC,GACvBF,GAAU,SAACG,GAAD,eAAC,UACNA,GADK,cAEPD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,WAE5BC,QAAQC,IAAIT,IAGNU,GAAgBC,EAAAA,EAAAA,YAAWC,EAAAA,GAA3BF,YAEFG,GAAWC,EAAAA,EAAAA,MAhBD,8CAkBhB,WAAsBX,GAAtB,6FACEA,EAAEY,iBADJ,kBAIgCC,MAAM,GAAD,OAC5BC,EAAAA,GAD4B,qCACSC,EAAAA,KAL9C,cAIUC,EAJV,gBAOwBA,EAAcC,OAPtC,YAOUC,EAPV,QAQaC,QARb,kCAUkCN,MAAM,GAAD,OAC5BC,EAAAA,GAD4B,qDACyBC,EAAAA,IACxD,CACEK,OAAQ,OACV3B,QAASA,EACT4B,KAAMC,KAAKC,WAAL,kBACD1B,GADC,IAEJ2B,cAAa,OAAEN,QAAF,IAAEA,OAAF,EAAEA,EAAOM,mBAjBhC,eAUYC,EAVZ,iBAqB6BA,EAAcR,OArB3C,aAqBUS,EArBV,QAsBkBP,QAtBlB,kCAwBoCN,MAAM,GAAD,OAC9BC,EAAAA,GAD8B,uCACSC,EAAAA,IAC5C,CACEK,OAAQ,OACR3B,QAASA,EACT4B,KAAMC,KAAKC,UAAU,CACnBC,cAAa,OAAEE,QAAF,IAAEA,OAAF,EAAEA,EAAYF,kBA9BrC,eAwBYG,EAxBZ,iBAkC6BA,EAAgBV,OAlC7C,SAkCUW,EAlCV,QAmCmBT,SACbU,aAAaC,QAAQ,aAArB,OAAmCF,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAYG,YAC/CrB,EAAS,SACTH,GAAY,IAEZyB,MAAK,OAACJ,QAAD,IAACA,OAAD,EAACA,EAAYK,gBAxCxB,wBA2CID,MAAMN,EAAWO,gBA3CrB,gCA8CED,MAAMd,EAAMe,gBA9Cd,0DAiDE5B,QAAQC,IAAR,MAjDF,2DAlBgB,sBAuEhB,OACE,gBAAK4B,UAAU,UAAf,UACE,gBAAKA,UAAU,QAAf,UACE,gBAAKA,UAAU,OAAf,UACE,6BACE,qCACA,kBACEC,KAAK,QACLhC,KAAK,WACLiC,YAAY,wBACZC,SAAUtC,KAEZ,kBACEoC,KAAK,WACLhC,KAAK,WACLiC,YAAY,WACZC,SAAUtC,KAEZ,mBACEuC,QAAS,SAACtC,IA1FN,oCA2FFuC,CAAOvC,IAFX,sBAOA,8CACkB,KAChB,cAAGwC,KAAK,oCAAR,6BAEF,sGAGE","sources":["pages/SignUp/index.jsx"],"sourcesContent":["import { useState, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../Providers/AuthContext\";\r\nimport { BASE_URL, API_KEY } from \"../../Url_s\";\r\n\r\nimport \"./index.scss\";\r\n\r\nconst headers = {\r\n  \"Content-Type\": \"application/json\",\r\n};\r\n\r\nfunction SignUp() {\r\n  const [values, setValues] = useState({\r\n    username: \"Arsen7\",\r\n    password: \"1234567\",\r\n  });\r\n\r\n  const onChangeHandler = (e) => {\r\n    setValues((prev) => ({\r\n      ...prev,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n    console.log(values);\r\n  };\r\n\r\n  const { setLoggedIn } = useContext(AuthContext);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  async function signIn(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const tokenResponse = await fetch(\r\n        `${BASE_URL}/authentication/token/new?${API_KEY}`\r\n      );\r\n      const token = await tokenResponse.json();\r\n      if(token.success){\r\n\r\n        const loginResponse = await fetch(\r\n          `${BASE_URL}/authentication/token/validate_with_login?${API_KEY}`,\r\n          {\r\n            method: \"POST\",\r\n          headers: headers,\r\n          body: JSON.stringify({\r\n            ...values,\r\n            request_token: token?.request_token,\r\n          }),\r\n        }\r\n        );\r\n      const loginToken = await loginResponse.json();\r\n      if(loginToken.success){\r\n\r\n        const sessionResponse = await fetch(\r\n          `${BASE_URL}/authentication/session/new?${API_KEY}`,\r\n        {\r\n          method: \"POST\",\r\n          headers: headers,\r\n          body: JSON.stringify({\r\n            request_token: loginToken?.request_token,\r\n          }),\r\n        }\r\n      );\r\n      const sessionRes = await sessionResponse.json();\r\n      if (sessionRes.success) {\r\n        localStorage.setItem(\"session-id\", sessionRes?.session_id);\r\n        navigate(\"/home\");\r\n        setLoggedIn(true);\r\n      } else {\r\n        alert(sessionRes?.status_message)\r\n      }\r\n    } else {\r\n      alert(loginToken.status_message)\r\n    }\r\n  } else {\r\n    alert(token.status_message)\r\n  }\r\n  } catch (e) {\r\n    console.log(e);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"cover\">\r\n        <div className=\"form\">\r\n          <form>\r\n            <h1>Sign In</h1>\r\n            <input\r\n              type=\"emial\"\r\n              name=\"username\"\r\n              placeholder=\"Email or phone number\"\r\n              onChange={onChangeHandler}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              onChange={onChangeHandler}\r\n            />\r\n            <button\r\n              onClick={(e) => {\r\n                signIn(e);\r\n              }}\r\n            >\r\n              Sign In\r\n            </button>\r\n            <span>\r\n              New to Netflix?{\" \"}\r\n              <a href=\"https://www.themoviedb.org/signup\">Sign up now</a>\r\n            </span>\r\n            <small>\r\n              This page is protected by Google reCAPCHA to ensure you're not a\r\n              bot.\r\n              <b> Learn more</b>\r\n            </small>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n"],"names":["headers","useState","username","password","values","setValues","onChangeHandler","e","prev","target","name","value","console","log","setLoggedIn","useContext","AuthContext","navigate","useNavigate","preventDefault","fetch","BASE_URL","API_KEY","tokenResponse","json","token","success","method","body","JSON","stringify","request_token","loginResponse","loginToken","sessionResponse","sessionRes","localStorage","setItem","session_id","alert","status_message","className","type","placeholder","onChange","onClick","signIn","href"],"sourceRoot":""}