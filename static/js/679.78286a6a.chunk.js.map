{"version":3,"file":"static/js/679.78286a6a.chunk.js","mappings":"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","sources":["Components/buttons/index.jsx","Components/Feaatured/Info/index.jsx","Components/Feaatured/index.jsx","pages/InfoPage/index.jsx"],"sourcesContent":["import \"./index.scss\";\r\n\r\nexport function PlayBtn({ onPlay, id }) {\r\n  return (\r\n    <button className=\"playBtn\" onClick={() => onPlay(id)}>\r\n      <i className=\"bx bx-play\"></i>\r\n      <span>Play</span>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport function InfoBtn({ onInfo }) {\r\n  return (\r\n    <button className=\"button more\" onClick={() => onInfo()}>\r\n      <i className=\"bx bx-info-circle\"></i>\r\n      <span>Info</span>\r\n    </button>\r\n  );\r\n}\r\n","import { useNavigate } from \"react-router-dom\";\r\n\r\nimport useMediaType from \"../../../hooks/useMediaType\";\r\nimport { PlayBtn } from \"../../buttons\";\r\nimport { imgUrl } from \"../../../Url_s\";\r\n\r\nimport \"./index.scss\";\r\n\r\n\r\nfunction Info({ data, onClose, type }) {\r\n  const navigate = useNavigate();\r\n  const movie = useMediaType(\"movie\");\r\n  const home = useMediaType(\"home\");\r\n\r\n\r\n   const play = (id) => {\r\n    navigate(movie || home ? `/watch/movie/${id}` : `/watch/tv/${id}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"backDrop\"\r\n        onClick={() => {\r\n          onClose();\r\n        }}\r\n      ></div>\r\n      <>\r\n        <div className=\"moreInfo\">\r\n          <div className=\"top\">\r\n            <img\r\n              className=\"poster\"\r\n              src={imgUrl + data?.backdrop_path}\r\n              alt={data?.name}\r\n            />\r\n            <div className=\"action\">\r\n              <div onClick={() => play(data.id)}>\r\n                <PlayBtn />\r\n              </div>\r\n              <div className=\"like\">+</div>\r\n              <div className=\"like\">\r\n                <i class=\"bx bx-like\"></i>\r\n              </div>\r\n              <div>{[\"bond\", \"njojoi\"].join(\",\")}</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"itemInfo\">\r\n            <div className=\"left\">\r\n              <h4>{data?.title || data?.name}</h4>\r\n              <span className=\"vote\">{data?.vote_average}</span>\r\n              <span>\r\n                {movie || type\r\n                  ? data?.release_date.slice(0, 4)\r\n                  : data?.first_air_date.slice(0, 4) +\r\n                    data?.last_air_date.slice(0, 4)}\r\n              </span>\r\n\r\n              <span>\r\n                {movie || type ? data?.runtime : null}\r\n                <span className=\"runtime\">min</span>{\" \"}\r\n              </span>\r\n              <span className=\"hd\">HD</span>\r\n              <div>{data?.origin_countr}</div>\r\n              <div>\r\n                {movie || type\r\n                  ? \"\"\r\n                  : data?.number_of_seasons +\r\n                    \"seasons\" +\r\n                    data?.number_of_episodes +\r\n                    \"episodes\"}\r\n              </div>\r\n              <div>\r\n                <a href={data?.homepage}>Homepage</a>\r\n              </div>\r\n            </div>\r\n            <div className=\"right\">\r\n              <div>\r\n                <span className=\"genre\">Genres:</span>\r\n                <span className=\"nameList\">\r\n                  {data?.genres.map((genre) => {\r\n                    return <span key={genre.name}>{genre.name}</span>;\r\n                  })}\r\n                </span>\r\n              </div>\r\n              <div>\r\n                <span className=\"genre\">Cast:</span>\r\n                <span>\r\n                  {data?.credits.cast.slice(0, 10).map((credit, id, arr) => {\r\n                    return (\r\n                      <span\r\n                        className=\"nameSpan\"\r\n                        key={credit.name}\r\n                        id={credit.id}\r\n                        onClick={(e) => navigate(`/person/${e.target.id}`)}\r\n                      >\r\n                        {id === arr.length - 1 ? credit.name : `${credit.name},`}\r\n                      </span>\r\n                    );\r\n                  })}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Info;\r\n","import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport Info from \"./Info\";\r\nimport useMediaType from \"../../hooks/useMediaType\";\r\nimport { PlayBtn, InfoBtn } from \"../buttons\";\r\nimport { imgUrl } from \"../../Url_s\";\r\n\r\nimport \"./index.scss\";\r\n\r\n\r\nfunction Featured({ res, type }) {\r\n  const [show, setShow] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const movie = useMediaType('movie')\r\n  const home = useMediaType('home')  \r\n\r\n  const onPlay = (id) => {\r\n    navigate(movie || home? `/watch/movie/${id}`: `/watch/tv/${id}`);\r\n  };\r\n\r\n  const onClose = () => {\r\n    setShow(false);\r\n  };\r\n\r\n  const onInfo = () => {\r\n    setShow(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"featured\">\r\n      <div className=\"cover\"></div>\r\n      <img width=\"100%\" src={imgUrl + res?.backdrop_path} alt={res?.title} />\r\n      <div className=\"info\">\r\n        <h1>{res?.title || res?.name}</h1>\r\n        <span className=\"desc\">{res?.overview}</span>\r\n        <div className=\"btns\">\r\n          <PlayBtn onPlay={onPlay} id={res?.id} /> \r\n          <InfoBtn onInfo={onInfo}/>\r\n        </div>\r\n      </div>\r\n      {show ? <Info data={res} onClose={onClose} type={type}/> : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Featured;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\nimport Featured from \"../../Components/Feaatured\";\r\n\r\n\r\nfunction InfoPage() {\r\n  const [data, setData] = useState();\r\n\r\n  const params = useParams();\r\n  const current = params.id;\r\n\r\n  let url = \"\";\r\n  const location = useLocation();\r\n  if (location.pathname.includes(\"movie\")) {\r\n    url = `https://api.themoviedb.org/3/movie/ ${current}?api_key=210df5155329bef70be1615bd2091852&append_to_response=videos,images,credits`;\r\n  } else {\r\n    url = `https://api.themoviedb.org/3/tv/ ${current}?api_key=210df5155329bef70be1615bd2091852&append_to_response=videos,images,credits`;\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((response) => setData(response));\r\n\r\n    console.log(data);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Featured res={data} />x\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InfoPage;\r\n"],"names":["PlayBtn","onPlay","id","className","onClick","InfoBtn","onInfo","data","onClose","type","navigate","useNavigate","movie","useMediaType","home","src","imgUrl","backdrop_path","alt","name","class","join","title","vote_average","release_date","slice","first_air_date","last_air_date","runtime","origin_countr","number_of_seasons","number_of_episodes","href","homepage","genres","map","genre","credits","cast","credit","arr","e","target","length","res","useState","show","setShow","width","overview","setData","current","useParams","url","location","useLocation","pathname","includes","useEffect","fetch","then","response","json","console","log"],"sourceRoot":""}